# coding: utf-8

"""
    Gusto API

    Welcome to Gusto's Embedded Payroll API documentation!

    The version of the OpenAPI document: 2024-03-01
    Contact: developer@gusto.com
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING

from gusto_embedded_payroll_python_sdk.type.employee_benefits_create_benefit_record_request_contribution import EmployeeBenefitsCreateBenefitRecordRequestContribution

class RequiredEmployeeBenefitsCreateBenefitRecordRequest(TypedDict):
    # The UUID of the company benefit.
    company_benefit_uuid: str

class OptionalEmployeeBenefitsCreateBenefitRecordRequest(TypedDict, total=False):
    # Whether the employee benefit is active.
    active: bool

    # The amount to be deducted, per pay period, from the employee's pay.
    employee_deduction: str

    # Whether the employee deduction amount should be treated as a percentage to be deducted from each payroll.
    deduct_as_percentage: bool

    # The maximum employee deduction amount per year. A null value signifies no limit.
    employee_deduction_annual_maximum: typing.Optional[str]

    contribution: EmployeeBenefitsCreateBenefitRecordRequestContribution

    # Whether the company contribution is elective (aka \"matching\"). For `tiered`, `elective_amount`, and `elective_percentage` contribution types this is ignored and assumed to be `true`.
    elective: bool

    # The maximum company contribution amount per year. A null value signifies no limit.
    company_contribution_annual_maximum: typing.Optional[str]

    # Some benefits require additional information to determine their limit. For example, for an HSA benefit, the limit option should be either \"Family\" or \"Individual\". For a Dependent Care FSA benefit, the limit option should be either \"Joint Filing or Single\" or \"Married and Filing Separately\".
    limit_option: typing.Optional[str]

    # Whether the employee should use a benefit’s \"catch up\" rate. Only Roth 401k and 401k benefits use this value for employees over 50.
    catch_up: bool

    # The amount that the employee is insured for. Note: company contribution cannot be present if coverage amount is set.
    coverage_amount: typing.Optional[str]

    # The coverage amount as a multiple of the employee’s salary. Only applicable for Group Term Life benefits. Note: cannot be set if coverage amount is also set.
    coverage_salary_multiplier: str

    # Whether the employee deduction reduces taxable income or not. Only valid for Group Term Life benefits. Note: when the value is not \"unset\", coverage amount and coverage salary multiplier are ignored.
    deduction_reduces_taxable_income: typing.Optional[str]

    # WARNING: This property is deprecated
    # The amount to be paid, per pay period, by the company.
    company_contribution: str

    # WARNING: This property is deprecated
    # Whether the company contribution amount should be treated as a percentage to be deducted from each payroll.
    contribute_as_percentage: bool

class EmployeeBenefitsCreateBenefitRecordRequest(RequiredEmployeeBenefitsCreateBenefitRecordRequest, OptionalEmployeeBenefitsCreateBenefitRecordRequest):
    pass
