# coding: utf-8

"""
    Gusto API

    Welcome to Gusto's Embedded Payroll API documentation!

    The version of the OpenAPI document: 2024-03-01
    Contact: developer@gusto.com
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING

from gusto_embedded_payroll_python_sdk.type.time_off_policy_employees import TimeOffPolicyEmployees

class RequiredTimeOffPolicy(TypedDict):
    # Unique identifier of a time off policy
    uuid: str

    # Unique identifier for the company owning the time off policy
    company_uuid: str

    # Name of the time off policy
    name: str

    # Type of the time off policy
    policy_type: str

    # Policy time off accrual method
    accrual_method: str

    # boolean representing if a policy is active or not
    is_active: bool

    employees: TimeOffPolicyEmployees

class OptionalTimeOffPolicy(TypedDict, total=False):
    # The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/versioning#object-layer) for information on how to use this field.
    version: str

    # The rate at which the time off hours will accrue for an employee on the policy. Represented as a float, e.g. \"40.0\".
    accrual_rate: float

    # The number of hours an employee has to work or be paid for to accrue the number of hours set in the accrual rate. Only used for hourly policies (per_hour_paid, per_hour_paid_no_overtime, per_hour_work, per_hour_worked_no_overtime). Represented as a float, e.g. \"40.0\".
    accrual_rate_unit: float

    # Boolean representing if an employees accrued time off hours will be paid out on termination
    paid_out_on_termination: bool

    # Number of days before an employee on the policy will begin accruing time off hours
    accrual_waiting_period_days: int

    # The max number of hours and employee can carryover from one year to the next
    carryover_limit_hours: float

    # The max number of hours and employee can accrue in a year
    max_accrual_hours_per_year: float

    # The max number of hours an employee can accrue
    max_hours: float

    # boolean representing if a policy has completed configuration
    complete: bool

class TimeOffPolicy(RequiredTimeOffPolicy, OptionalTimeOffPolicy):
    pass
