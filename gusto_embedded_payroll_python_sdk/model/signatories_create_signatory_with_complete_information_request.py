# coding: utf-8

"""
    Gusto API

    Welcome to Gusto's Embedded Payroll API documentation!

    The version of the OpenAPI document: 2024-03-01
    Contact: developer@gusto.com
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from gusto_embedded_payroll_python_sdk import schemas  # noqa: F401


class SignatoriesCreateSignatoryWithCompleteInformationRequest(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        required = {
            "birthday",
            "home_address",
            "phone",
            "last_name",
            "title",
            "first_name",
            "email",
            "ssn",
        }
        
        class properties:
            title = schemas.StrSchema
            ssn = schemas.StrSchema
            first_name = schemas.StrSchema
            last_name = schemas.StrSchema
            email = schemas.StrSchema
            phone = schemas.StrSchema
            birthday = schemas.StrSchema
        
            @staticmethod
            def home_address() -> typing.Type['SignatoriesCreateSignatoryWithCompleteInformationRequestHomeAddress']:
                return SignatoriesCreateSignatoryWithCompleteInformationRequestHomeAddress
            middle_initial = schemas.StrSchema
            __annotations__ = {
                "title": title,
                "ssn": ssn,
                "first_name": first_name,
                "last_name": last_name,
                "email": email,
                "phone": phone,
                "birthday": birthday,
                "home_address": home_address,
                "middle_initial": middle_initial,
            }
    
    birthday: MetaOapg.properties.birthday
    home_address: 'SignatoriesCreateSignatoryWithCompleteInformationRequestHomeAddress'
    phone: MetaOapg.properties.phone
    last_name: MetaOapg.properties.last_name
    title: MetaOapg.properties.title
    first_name: MetaOapg.properties.first_name
    email: MetaOapg.properties.email
    ssn: MetaOapg.properties.ssn
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["title"]) -> MetaOapg.properties.title: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ssn"]) -> MetaOapg.properties.ssn: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["first_name"]) -> MetaOapg.properties.first_name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["last_name"]) -> MetaOapg.properties.last_name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["email"]) -> MetaOapg.properties.email: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["phone"]) -> MetaOapg.properties.phone: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["birthday"]) -> MetaOapg.properties.birthday: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["home_address"]) -> 'SignatoriesCreateSignatoryWithCompleteInformationRequestHomeAddress': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["middle_initial"]) -> MetaOapg.properties.middle_initial: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["title", "ssn", "first_name", "last_name", "email", "phone", "birthday", "home_address", "middle_initial", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["title"]) -> MetaOapg.properties.title: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ssn"]) -> MetaOapg.properties.ssn: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["first_name"]) -> MetaOapg.properties.first_name: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["last_name"]) -> MetaOapg.properties.last_name: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["email"]) -> MetaOapg.properties.email: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["phone"]) -> MetaOapg.properties.phone: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["birthday"]) -> MetaOapg.properties.birthday: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["home_address"]) -> 'SignatoriesCreateSignatoryWithCompleteInformationRequestHomeAddress': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["middle_initial"]) -> typing.Union[MetaOapg.properties.middle_initial, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["title", "ssn", "first_name", "last_name", "email", "phone", "birthday", "home_address", "middle_initial", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        birthday: typing.Union[MetaOapg.properties.birthday, str, ],
        home_address: 'SignatoriesCreateSignatoryWithCompleteInformationRequestHomeAddress',
        phone: typing.Union[MetaOapg.properties.phone, str, ],
        last_name: typing.Union[MetaOapg.properties.last_name, str, ],
        title: typing.Union[MetaOapg.properties.title, str, ],
        first_name: typing.Union[MetaOapg.properties.first_name, str, ],
        email: typing.Union[MetaOapg.properties.email, str, ],
        ssn: typing.Union[MetaOapg.properties.ssn, str, ],
        middle_initial: typing.Union[MetaOapg.properties.middle_initial, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'SignatoriesCreateSignatoryWithCompleteInformationRequest':
        return super().__new__(
            cls,
            *args,
            birthday=birthday,
            home_address=home_address,
            phone=phone,
            last_name=last_name,
            title=title,
            first_name=first_name,
            email=email,
            ssn=ssn,
            middle_initial=middle_initial,
            _configuration=_configuration,
            **kwargs,
        )

from gusto_embedded_payroll_python_sdk.model.signatories_create_signatory_with_complete_information_request_home_address import SignatoriesCreateSignatoryWithCompleteInformationRequestHomeAddress
