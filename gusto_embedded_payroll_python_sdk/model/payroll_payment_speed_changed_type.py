# coding: utf-8

"""
    Gusto API

    Welcome to Gusto's Embedded Payroll API documentation!

    The version of the OpenAPI document: 2024-03-01
    Contact: developer@gusto.com
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from gusto_embedded_payroll_python_sdk import schemas  # noqa: F401


class PayrollPaymentSpeedChangedType(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)

    Only applicable when a payroll is moved to four day processing instead of fast ach.
    """


    class MetaOapg:
        
        class properties:
            original_check_date = schemas.StrSchema
            current_check_date = schemas.StrSchema
            original_debit_date = schemas.NumberSchema
            current_debit_date = schemas.StrSchema
            reason = schemas.StrSchema
            __annotations__ = {
                "original_check_date": original_check_date,
                "current_check_date": current_check_date,
                "original_debit_date": original_debit_date,
                "current_debit_date": current_debit_date,
                "reason": reason,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["original_check_date"]) -> MetaOapg.properties.original_check_date: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["current_check_date"]) -> MetaOapg.properties.current_check_date: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["original_debit_date"]) -> MetaOapg.properties.original_debit_date: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["current_debit_date"]) -> MetaOapg.properties.current_debit_date: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["reason"]) -> MetaOapg.properties.reason: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["original_check_date", "current_check_date", "original_debit_date", "current_debit_date", "reason", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["original_check_date"]) -> typing.Union[MetaOapg.properties.original_check_date, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["current_check_date"]) -> typing.Union[MetaOapg.properties.current_check_date, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["original_debit_date"]) -> typing.Union[MetaOapg.properties.original_debit_date, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["current_debit_date"]) -> typing.Union[MetaOapg.properties.current_debit_date, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["reason"]) -> typing.Union[MetaOapg.properties.reason, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["original_check_date", "current_check_date", "original_debit_date", "current_debit_date", "reason", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        original_check_date: typing.Union[MetaOapg.properties.original_check_date, str, schemas.Unset] = schemas.unset,
        current_check_date: typing.Union[MetaOapg.properties.current_check_date, str, schemas.Unset] = schemas.unset,
        original_debit_date: typing.Union[MetaOapg.properties.original_debit_date, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        current_debit_date: typing.Union[MetaOapg.properties.current_debit_date, str, schemas.Unset] = schemas.unset,
        reason: typing.Union[MetaOapg.properties.reason, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'PayrollPaymentSpeedChangedType':
        return super().__new__(
            cls,
            *args,
            original_check_date=original_check_date,
            current_check_date=current_check_date,
            original_debit_date=original_debit_date,
            current_debit_date=current_debit_date,
            reason=reason,
            _configuration=_configuration,
            **kwargs,
        )
