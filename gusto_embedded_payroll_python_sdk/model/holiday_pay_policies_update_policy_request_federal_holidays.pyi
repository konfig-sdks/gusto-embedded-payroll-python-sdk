# coding: utf-8

"""
    Gusto API

    Welcome to Gusto's Embedded Payroll API documentation!

    The version of the OpenAPI document: 2024-03-01
    Contact: developer@gusto.com
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from gusto_embedded_payroll_python_sdk import schemas  # noqa: F401


class HolidayPayPoliciesUpdatePolicyRequestFederalHolidays(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)

    An object containing federal holiday objects, each containing a boolean selected property.
    """


    class MetaOapg:
        
        class properties:
        
            @staticmethod
            def new_years_day() -> typing.Type['HolidayPayPoliciesUpdatePolicyRequestFederalHolidaysNewYearsDay']:
                return HolidayPayPoliciesUpdatePolicyRequestFederalHolidaysNewYearsDay
        
            @staticmethod
            def mlk_day() -> typing.Type['HolidayPayPoliciesUpdatePolicyRequestFederalHolidaysMlkDay']:
                return HolidayPayPoliciesUpdatePolicyRequestFederalHolidaysMlkDay
        
            @staticmethod
            def presidents_day() -> typing.Type['HolidayPayPoliciesUpdatePolicyRequestFederalHolidaysPresidentsDay']:
                return HolidayPayPoliciesUpdatePolicyRequestFederalHolidaysPresidentsDay
        
            @staticmethod
            def memorial_day() -> typing.Type['HolidayPayPoliciesUpdatePolicyRequestFederalHolidaysMemorialDay']:
                return HolidayPayPoliciesUpdatePolicyRequestFederalHolidaysMemorialDay
        
            @staticmethod
            def juneteenth() -> typing.Type['HolidayPayPoliciesUpdatePolicyRequestFederalHolidaysJuneteenth']:
                return HolidayPayPoliciesUpdatePolicyRequestFederalHolidaysJuneteenth
        
            @staticmethod
            def independence_day() -> typing.Type['HolidayPayPoliciesUpdatePolicyRequestFederalHolidaysIndependenceDay']:
                return HolidayPayPoliciesUpdatePolicyRequestFederalHolidaysIndependenceDay
        
            @staticmethod
            def labor_day() -> typing.Type['HolidayPayPoliciesUpdatePolicyRequestFederalHolidaysLaborDay']:
                return HolidayPayPoliciesUpdatePolicyRequestFederalHolidaysLaborDay
        
            @staticmethod
            def columbus_day() -> typing.Type['HolidayPayPoliciesUpdatePolicyRequestFederalHolidaysColumbusDay']:
                return HolidayPayPoliciesUpdatePolicyRequestFederalHolidaysColumbusDay
        
            @staticmethod
            def veterans_day() -> typing.Type['HolidayPayPoliciesUpdatePolicyRequestFederalHolidaysVeteransDay']:
                return HolidayPayPoliciesUpdatePolicyRequestFederalHolidaysVeteransDay
        
            @staticmethod
            def thanksgiving() -> typing.Type['HolidayPayPoliciesUpdatePolicyRequestFederalHolidaysThanksgiving']:
                return HolidayPayPoliciesUpdatePolicyRequestFederalHolidaysThanksgiving
        
            @staticmethod
            def christmas_day() -> typing.Type['HolidayPayPoliciesUpdatePolicyRequestFederalHolidaysChristmasDay']:
                return HolidayPayPoliciesUpdatePolicyRequestFederalHolidaysChristmasDay
            __annotations__ = {
                "new_years_day": new_years_day,
                "mlk_day": mlk_day,
                "presidents_day": presidents_day,
                "memorial_day": memorial_day,
                "juneteenth": juneteenth,
                "independence_day": independence_day,
                "labor_day": labor_day,
                "columbus_day": columbus_day,
                "veterans_day": veterans_day,
                "thanksgiving": thanksgiving,
                "christmas_day": christmas_day,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["new_years_day"]) -> 'HolidayPayPoliciesUpdatePolicyRequestFederalHolidaysNewYearsDay': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["mlk_day"]) -> 'HolidayPayPoliciesUpdatePolicyRequestFederalHolidaysMlkDay': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["presidents_day"]) -> 'HolidayPayPoliciesUpdatePolicyRequestFederalHolidaysPresidentsDay': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["memorial_day"]) -> 'HolidayPayPoliciesUpdatePolicyRequestFederalHolidaysMemorialDay': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["juneteenth"]) -> 'HolidayPayPoliciesUpdatePolicyRequestFederalHolidaysJuneteenth': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["independence_day"]) -> 'HolidayPayPoliciesUpdatePolicyRequestFederalHolidaysIndependenceDay': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["labor_day"]) -> 'HolidayPayPoliciesUpdatePolicyRequestFederalHolidaysLaborDay': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["columbus_day"]) -> 'HolidayPayPoliciesUpdatePolicyRequestFederalHolidaysColumbusDay': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["veterans_day"]) -> 'HolidayPayPoliciesUpdatePolicyRequestFederalHolidaysVeteransDay': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["thanksgiving"]) -> 'HolidayPayPoliciesUpdatePolicyRequestFederalHolidaysThanksgiving': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["christmas_day"]) -> 'HolidayPayPoliciesUpdatePolicyRequestFederalHolidaysChristmasDay': ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["new_years_day", "mlk_day", "presidents_day", "memorial_day", "juneteenth", "independence_day", "labor_day", "columbus_day", "veterans_day", "thanksgiving", "christmas_day", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["new_years_day"]) -> typing.Union['HolidayPayPoliciesUpdatePolicyRequestFederalHolidaysNewYearsDay', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["mlk_day"]) -> typing.Union['HolidayPayPoliciesUpdatePolicyRequestFederalHolidaysMlkDay', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["presidents_day"]) -> typing.Union['HolidayPayPoliciesUpdatePolicyRequestFederalHolidaysPresidentsDay', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["memorial_day"]) -> typing.Union['HolidayPayPoliciesUpdatePolicyRequestFederalHolidaysMemorialDay', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["juneteenth"]) -> typing.Union['HolidayPayPoliciesUpdatePolicyRequestFederalHolidaysJuneteenth', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["independence_day"]) -> typing.Union['HolidayPayPoliciesUpdatePolicyRequestFederalHolidaysIndependenceDay', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["labor_day"]) -> typing.Union['HolidayPayPoliciesUpdatePolicyRequestFederalHolidaysLaborDay', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["columbus_day"]) -> typing.Union['HolidayPayPoliciesUpdatePolicyRequestFederalHolidaysColumbusDay', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["veterans_day"]) -> typing.Union['HolidayPayPoliciesUpdatePolicyRequestFederalHolidaysVeteransDay', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["thanksgiving"]) -> typing.Union['HolidayPayPoliciesUpdatePolicyRequestFederalHolidaysThanksgiving', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["christmas_day"]) -> typing.Union['HolidayPayPoliciesUpdatePolicyRequestFederalHolidaysChristmasDay', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["new_years_day", "mlk_day", "presidents_day", "memorial_day", "juneteenth", "independence_day", "labor_day", "columbus_day", "veterans_day", "thanksgiving", "christmas_day", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        new_years_day: typing.Union['HolidayPayPoliciesUpdatePolicyRequestFederalHolidaysNewYearsDay', schemas.Unset] = schemas.unset,
        mlk_day: typing.Union['HolidayPayPoliciesUpdatePolicyRequestFederalHolidaysMlkDay', schemas.Unset] = schemas.unset,
        presidents_day: typing.Union['HolidayPayPoliciesUpdatePolicyRequestFederalHolidaysPresidentsDay', schemas.Unset] = schemas.unset,
        memorial_day: typing.Union['HolidayPayPoliciesUpdatePolicyRequestFederalHolidaysMemorialDay', schemas.Unset] = schemas.unset,
        juneteenth: typing.Union['HolidayPayPoliciesUpdatePolicyRequestFederalHolidaysJuneteenth', schemas.Unset] = schemas.unset,
        independence_day: typing.Union['HolidayPayPoliciesUpdatePolicyRequestFederalHolidaysIndependenceDay', schemas.Unset] = schemas.unset,
        labor_day: typing.Union['HolidayPayPoliciesUpdatePolicyRequestFederalHolidaysLaborDay', schemas.Unset] = schemas.unset,
        columbus_day: typing.Union['HolidayPayPoliciesUpdatePolicyRequestFederalHolidaysColumbusDay', schemas.Unset] = schemas.unset,
        veterans_day: typing.Union['HolidayPayPoliciesUpdatePolicyRequestFederalHolidaysVeteransDay', schemas.Unset] = schemas.unset,
        thanksgiving: typing.Union['HolidayPayPoliciesUpdatePolicyRequestFederalHolidaysThanksgiving', schemas.Unset] = schemas.unset,
        christmas_day: typing.Union['HolidayPayPoliciesUpdatePolicyRequestFederalHolidaysChristmasDay', schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'HolidayPayPoliciesUpdatePolicyRequestFederalHolidays':
        return super().__new__(
            cls,
            *args,
            new_years_day=new_years_day,
            mlk_day=mlk_day,
            presidents_day=presidents_day,
            memorial_day=memorial_day,
            juneteenth=juneteenth,
            independence_day=independence_day,
            labor_day=labor_day,
            columbus_day=columbus_day,
            veterans_day=veterans_day,
            thanksgiving=thanksgiving,
            christmas_day=christmas_day,
            _configuration=_configuration,
            **kwargs,
        )

from gusto_embedded_payroll_python_sdk.model.holiday_pay_policies_update_policy_request_federal_holidays_christmas_day import HolidayPayPoliciesUpdatePolicyRequestFederalHolidaysChristmasDay
from gusto_embedded_payroll_python_sdk.model.holiday_pay_policies_update_policy_request_federal_holidays_columbus_day import HolidayPayPoliciesUpdatePolicyRequestFederalHolidaysColumbusDay
from gusto_embedded_payroll_python_sdk.model.holiday_pay_policies_update_policy_request_federal_holidays_independence_day import HolidayPayPoliciesUpdatePolicyRequestFederalHolidaysIndependenceDay
from gusto_embedded_payroll_python_sdk.model.holiday_pay_policies_update_policy_request_federal_holidays_juneteenth import HolidayPayPoliciesUpdatePolicyRequestFederalHolidaysJuneteenth
from gusto_embedded_payroll_python_sdk.model.holiday_pay_policies_update_policy_request_federal_holidays_labor_day import HolidayPayPoliciesUpdatePolicyRequestFederalHolidaysLaborDay
from gusto_embedded_payroll_python_sdk.model.holiday_pay_policies_update_policy_request_federal_holidays_memorial_day import HolidayPayPoliciesUpdatePolicyRequestFederalHolidaysMemorialDay
from gusto_embedded_payroll_python_sdk.model.holiday_pay_policies_update_policy_request_federal_holidays_mlk_day import HolidayPayPoliciesUpdatePolicyRequestFederalHolidaysMlkDay
from gusto_embedded_payroll_python_sdk.model.holiday_pay_policies_update_policy_request_federal_holidays_new_years_day import HolidayPayPoliciesUpdatePolicyRequestFederalHolidaysNewYearsDay
from gusto_embedded_payroll_python_sdk.model.holiday_pay_policies_update_policy_request_federal_holidays_presidents_day import HolidayPayPoliciesUpdatePolicyRequestFederalHolidaysPresidentsDay
from gusto_embedded_payroll_python_sdk.model.holiday_pay_policies_update_policy_request_federal_holidays_thanksgiving import HolidayPayPoliciesUpdatePolicyRequestFederalHolidaysThanksgiving
from gusto_embedded_payroll_python_sdk.model.holiday_pay_policies_update_policy_request_federal_holidays_veterans_day import HolidayPayPoliciesUpdatePolicyRequestFederalHolidaysVeteransDay
