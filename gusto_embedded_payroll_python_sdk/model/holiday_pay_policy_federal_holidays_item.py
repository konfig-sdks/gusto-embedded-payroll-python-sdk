# coding: utf-8

"""
    Gusto API

    Welcome to Gusto's Embedded Payroll API documentation!

    The version of the OpenAPI document: 2024-03-01
    Contact: developer@gusto.com
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from gusto_embedded_payroll_python_sdk import schemas  # noqa: F401


class HolidayPayPolicyFederalHolidaysItem(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
        
            @staticmethod
            def new_years_day() -> typing.Type['HolidayPayPolicyFederalHolidaysItemNewYearsDay']:
                return HolidayPayPolicyFederalHolidaysItemNewYearsDay
        
            @staticmethod
            def mlk_day() -> typing.Type['HolidayPayPolicyFederalHolidaysItemMlkDay']:
                return HolidayPayPolicyFederalHolidaysItemMlkDay
        
            @staticmethod
            def presidents_day() -> typing.Type['HolidayPayPolicyFederalHolidaysItemPresidentsDay']:
                return HolidayPayPolicyFederalHolidaysItemPresidentsDay
        
            @staticmethod
            def memorial_day() -> typing.Type['HolidayPayPolicyFederalHolidaysItemMemorialDay']:
                return HolidayPayPolicyFederalHolidaysItemMemorialDay
        
            @staticmethod
            def juneteenth() -> typing.Type['HolidayPayPolicyFederalHolidaysItemJuneteenth']:
                return HolidayPayPolicyFederalHolidaysItemJuneteenth
        
            @staticmethod
            def independence_day() -> typing.Type['HolidayPayPolicyFederalHolidaysItemIndependenceDay']:
                return HolidayPayPolicyFederalHolidaysItemIndependenceDay
        
            @staticmethod
            def labor_day() -> typing.Type['HolidayPayPolicyFederalHolidaysItemLaborDay']:
                return HolidayPayPolicyFederalHolidaysItemLaborDay
        
            @staticmethod
            def columbus_day() -> typing.Type['HolidayPayPolicyFederalHolidaysItemColumbusDay']:
                return HolidayPayPolicyFederalHolidaysItemColumbusDay
        
            @staticmethod
            def veterans_day() -> typing.Type['HolidayPayPolicyFederalHolidaysItemVeteransDay']:
                return HolidayPayPolicyFederalHolidaysItemVeteransDay
        
            @staticmethod
            def thanksgiving() -> typing.Type['HolidayPayPolicyFederalHolidaysItemThanksgiving']:
                return HolidayPayPolicyFederalHolidaysItemThanksgiving
            __annotations__ = {
                "new_years_day": new_years_day,
                "mlk_day": mlk_day,
                "presidents_day": presidents_day,
                "memorial_day": memorial_day,
                "juneteenth": juneteenth,
                "independence_day": independence_day,
                "labor_day": labor_day,
                "columbus_day": columbus_day,
                "veterans_day": veterans_day,
                "thanksgiving": thanksgiving,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["new_years_day"]) -> 'HolidayPayPolicyFederalHolidaysItemNewYearsDay': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["mlk_day"]) -> 'HolidayPayPolicyFederalHolidaysItemMlkDay': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["presidents_day"]) -> 'HolidayPayPolicyFederalHolidaysItemPresidentsDay': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["memorial_day"]) -> 'HolidayPayPolicyFederalHolidaysItemMemorialDay': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["juneteenth"]) -> 'HolidayPayPolicyFederalHolidaysItemJuneteenth': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["independence_day"]) -> 'HolidayPayPolicyFederalHolidaysItemIndependenceDay': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["labor_day"]) -> 'HolidayPayPolicyFederalHolidaysItemLaborDay': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["columbus_day"]) -> 'HolidayPayPolicyFederalHolidaysItemColumbusDay': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["veterans_day"]) -> 'HolidayPayPolicyFederalHolidaysItemVeteransDay': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["thanksgiving"]) -> 'HolidayPayPolicyFederalHolidaysItemThanksgiving': ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["new_years_day", "mlk_day", "presidents_day", "memorial_day", "juneteenth", "independence_day", "labor_day", "columbus_day", "veterans_day", "thanksgiving", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["new_years_day"]) -> typing.Union['HolidayPayPolicyFederalHolidaysItemNewYearsDay', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["mlk_day"]) -> typing.Union['HolidayPayPolicyFederalHolidaysItemMlkDay', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["presidents_day"]) -> typing.Union['HolidayPayPolicyFederalHolidaysItemPresidentsDay', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["memorial_day"]) -> typing.Union['HolidayPayPolicyFederalHolidaysItemMemorialDay', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["juneteenth"]) -> typing.Union['HolidayPayPolicyFederalHolidaysItemJuneteenth', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["independence_day"]) -> typing.Union['HolidayPayPolicyFederalHolidaysItemIndependenceDay', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["labor_day"]) -> typing.Union['HolidayPayPolicyFederalHolidaysItemLaborDay', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["columbus_day"]) -> typing.Union['HolidayPayPolicyFederalHolidaysItemColumbusDay', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["veterans_day"]) -> typing.Union['HolidayPayPolicyFederalHolidaysItemVeteransDay', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["thanksgiving"]) -> typing.Union['HolidayPayPolicyFederalHolidaysItemThanksgiving', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["new_years_day", "mlk_day", "presidents_day", "memorial_day", "juneteenth", "independence_day", "labor_day", "columbus_day", "veterans_day", "thanksgiving", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        new_years_day: typing.Union['HolidayPayPolicyFederalHolidaysItemNewYearsDay', schemas.Unset] = schemas.unset,
        mlk_day: typing.Union['HolidayPayPolicyFederalHolidaysItemMlkDay', schemas.Unset] = schemas.unset,
        presidents_day: typing.Union['HolidayPayPolicyFederalHolidaysItemPresidentsDay', schemas.Unset] = schemas.unset,
        memorial_day: typing.Union['HolidayPayPolicyFederalHolidaysItemMemorialDay', schemas.Unset] = schemas.unset,
        juneteenth: typing.Union['HolidayPayPolicyFederalHolidaysItemJuneteenth', schemas.Unset] = schemas.unset,
        independence_day: typing.Union['HolidayPayPolicyFederalHolidaysItemIndependenceDay', schemas.Unset] = schemas.unset,
        labor_day: typing.Union['HolidayPayPolicyFederalHolidaysItemLaborDay', schemas.Unset] = schemas.unset,
        columbus_day: typing.Union['HolidayPayPolicyFederalHolidaysItemColumbusDay', schemas.Unset] = schemas.unset,
        veterans_day: typing.Union['HolidayPayPolicyFederalHolidaysItemVeteransDay', schemas.Unset] = schemas.unset,
        thanksgiving: typing.Union['HolidayPayPolicyFederalHolidaysItemThanksgiving', schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'HolidayPayPolicyFederalHolidaysItem':
        return super().__new__(
            cls,
            *args,
            new_years_day=new_years_day,
            mlk_day=mlk_day,
            presidents_day=presidents_day,
            memorial_day=memorial_day,
            juneteenth=juneteenth,
            independence_day=independence_day,
            labor_day=labor_day,
            columbus_day=columbus_day,
            veterans_day=veterans_day,
            thanksgiving=thanksgiving,
            _configuration=_configuration,
            **kwargs,
        )

from gusto_embedded_payroll_python_sdk.model.holiday_pay_policy_federal_holidays_item_columbus_day import HolidayPayPolicyFederalHolidaysItemColumbusDay
from gusto_embedded_payroll_python_sdk.model.holiday_pay_policy_federal_holidays_item_independence_day import HolidayPayPolicyFederalHolidaysItemIndependenceDay
from gusto_embedded_payroll_python_sdk.model.holiday_pay_policy_federal_holidays_item_juneteenth import HolidayPayPolicyFederalHolidaysItemJuneteenth
from gusto_embedded_payroll_python_sdk.model.holiday_pay_policy_federal_holidays_item_labor_day import HolidayPayPolicyFederalHolidaysItemLaborDay
from gusto_embedded_payroll_python_sdk.model.holiday_pay_policy_federal_holidays_item_memorial_day import HolidayPayPolicyFederalHolidaysItemMemorialDay
from gusto_embedded_payroll_python_sdk.model.holiday_pay_policy_federal_holidays_item_mlk_day import HolidayPayPolicyFederalHolidaysItemMlkDay
from gusto_embedded_payroll_python_sdk.model.holiday_pay_policy_federal_holidays_item_new_years_day import HolidayPayPolicyFederalHolidaysItemNewYearsDay
from gusto_embedded_payroll_python_sdk.model.holiday_pay_policy_federal_holidays_item_presidents_day import HolidayPayPolicyFederalHolidaysItemPresidentsDay
from gusto_embedded_payroll_python_sdk.model.holiday_pay_policy_federal_holidays_item_thanksgiving import HolidayPayPolicyFederalHolidaysItemThanksgiving
from gusto_embedded_payroll_python_sdk.model.holiday_pay_policy_federal_holidays_item_veterans_day import HolidayPayPolicyFederalHolidaysItemVeteransDay
