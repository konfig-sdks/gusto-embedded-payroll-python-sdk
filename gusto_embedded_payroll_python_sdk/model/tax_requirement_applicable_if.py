# coding: utf-8

"""
    Gusto API

    Welcome to Gusto's Embedded Payroll API documentation!

    The version of the OpenAPI document: 2024-03-01
    Contact: developer@gusto.com
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from gusto_embedded_payroll_python_sdk import schemas  # noqa: F401


class TaxRequirementApplicableIf(
    schemas.ListSchema
):
    """NOTE:
    This class is auto generated by Konfig (https://konfigthis.com)

    An array of references to other requirements within the requirement set. This requirement is only applicable if all referenced requirements have values matching the corresponding `value`. The primary use-case is dynamically hiding and showing requirements as values change. E.g. Show Requirement-B when Requirement-A has been answered with `false`. To be explicit, an empty array means the requirement is applicable.
    """


    class MetaOapg:
        
        @staticmethod
        def items() -> typing.Type['TaxRequirementApplicableIfItem']:
            return TaxRequirementApplicableIfItem

    def __new__(
        cls,
        arg: typing.Union[typing.Tuple['TaxRequirementApplicableIfItem'], typing.List['TaxRequirementApplicableIfItem']],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'TaxRequirementApplicableIf':
        return super().__new__(
            cls,
            arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> 'TaxRequirementApplicableIfItem':
        return super().__getitem__(i)

from gusto_embedded_payroll_python_sdk.model.tax_requirement_applicable_if_item import TaxRequirementApplicableIfItem
