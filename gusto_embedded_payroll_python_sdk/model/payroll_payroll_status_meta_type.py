# coding: utf-8

"""
    Gusto API

    Welcome to Gusto's Embedded Payroll API documentation!

    The version of the OpenAPI document: 2024-03-01
    Contact: developer@gusto.com
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from gusto_embedded_payroll_python_sdk import schemas  # noqa: F401


class PayrollPayrollStatusMetaType(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)

    Information about the payroll's status and expected dates
    """


    class MetaOapg:
        
        class properties:
            cancellable = schemas.BoolSchema
            expected_check_date = schemas.StrSchema
            initial_check_date = schemas.StrSchema
            expected_debit_time = schemas.StrSchema
            payroll_late = schemas.BoolSchema
            initial_debit_cutoff_time = schemas.StrSchema
            __annotations__ = {
                "cancellable": cancellable,
                "expected_check_date": expected_check_date,
                "initial_check_date": initial_check_date,
                "expected_debit_time": expected_debit_time,
                "payroll_late": payroll_late,
                "initial_debit_cutoff_time": initial_debit_cutoff_time,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["cancellable"]) -> MetaOapg.properties.cancellable: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["expected_check_date"]) -> MetaOapg.properties.expected_check_date: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["initial_check_date"]) -> MetaOapg.properties.initial_check_date: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["expected_debit_time"]) -> MetaOapg.properties.expected_debit_time: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["payroll_late"]) -> MetaOapg.properties.payroll_late: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["initial_debit_cutoff_time"]) -> MetaOapg.properties.initial_debit_cutoff_time: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["cancellable", "expected_check_date", "initial_check_date", "expected_debit_time", "payroll_late", "initial_debit_cutoff_time", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["cancellable"]) -> typing.Union[MetaOapg.properties.cancellable, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["expected_check_date"]) -> typing.Union[MetaOapg.properties.expected_check_date, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["initial_check_date"]) -> typing.Union[MetaOapg.properties.initial_check_date, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["expected_debit_time"]) -> typing.Union[MetaOapg.properties.expected_debit_time, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["payroll_late"]) -> typing.Union[MetaOapg.properties.payroll_late, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["initial_debit_cutoff_time"]) -> typing.Union[MetaOapg.properties.initial_debit_cutoff_time, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["cancellable", "expected_check_date", "initial_check_date", "expected_debit_time", "payroll_late", "initial_debit_cutoff_time", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        cancellable: typing.Union[MetaOapg.properties.cancellable, bool, schemas.Unset] = schemas.unset,
        expected_check_date: typing.Union[MetaOapg.properties.expected_check_date, str, schemas.Unset] = schemas.unset,
        initial_check_date: typing.Union[MetaOapg.properties.initial_check_date, str, schemas.Unset] = schemas.unset,
        expected_debit_time: typing.Union[MetaOapg.properties.expected_debit_time, str, schemas.Unset] = schemas.unset,
        payroll_late: typing.Union[MetaOapg.properties.payroll_late, bool, schemas.Unset] = schemas.unset,
        initial_debit_cutoff_time: typing.Union[MetaOapg.properties.initial_debit_cutoff_time, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'PayrollPayrollStatusMetaType':
        return super().__new__(
            cls,
            *args,
            cancellable=cancellable,
            expected_check_date=expected_check_date,
            initial_check_date=initial_check_date,
            expected_debit_time=expected_debit_time,
            payroll_late=payroll_late,
            initial_debit_cutoff_time=initial_debit_cutoff_time,
            _configuration=_configuration,
            **kwargs,
        )
