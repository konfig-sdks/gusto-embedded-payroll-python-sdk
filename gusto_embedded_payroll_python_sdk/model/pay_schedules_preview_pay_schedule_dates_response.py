# coding: utf-8

"""
    Gusto API

    Welcome to Gusto's Embedded Payroll API documentation!

    The version of the OpenAPI document: 2024-03-01
    Contact: developer@gusto.com
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from gusto_embedded_payroll_python_sdk import schemas  # noqa: F401


class PaySchedulesPreviewPayScheduleDatesResponse(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)

    Pay schedule preview
    """


    class MetaOapg:
        
        class properties:
        
            @staticmethod
            def pay_periods() -> typing.Type['PaySchedulesPreviewPayScheduleDatesResponsePayPeriods']:
                return PaySchedulesPreviewPayScheduleDatesResponsePayPeriods
        
            @staticmethod
            def holidays() -> typing.Type['PaySchedulesPreviewPayScheduleDatesResponseHolidays']:
                return PaySchedulesPreviewPayScheduleDatesResponseHolidays
            __annotations__ = {
                "pay_periods": pay_periods,
                "holidays": holidays,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["pay_periods"]) -> 'PaySchedulesPreviewPayScheduleDatesResponsePayPeriods': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["holidays"]) -> 'PaySchedulesPreviewPayScheduleDatesResponseHolidays': ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["pay_periods", "holidays", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["pay_periods"]) -> typing.Union['PaySchedulesPreviewPayScheduleDatesResponsePayPeriods', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["holidays"]) -> typing.Union['PaySchedulesPreviewPayScheduleDatesResponseHolidays', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["pay_periods", "holidays", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        pay_periods: typing.Union['PaySchedulesPreviewPayScheduleDatesResponsePayPeriods', schemas.Unset] = schemas.unset,
        holidays: typing.Union['PaySchedulesPreviewPayScheduleDatesResponseHolidays', schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'PaySchedulesPreviewPayScheduleDatesResponse':
        return super().__new__(
            cls,
            *args,
            pay_periods=pay_periods,
            holidays=holidays,
            _configuration=_configuration,
            **kwargs,
        )

from gusto_embedded_payroll_python_sdk.model.pay_schedules_preview_pay_schedule_dates_response_holidays import PaySchedulesPreviewPayScheduleDatesResponseHolidays
from gusto_embedded_payroll_python_sdk.model.pay_schedules_preview_pay_schedule_dates_response_pay_periods import PaySchedulesPreviewPayScheduleDatesResponsePayPeriods
