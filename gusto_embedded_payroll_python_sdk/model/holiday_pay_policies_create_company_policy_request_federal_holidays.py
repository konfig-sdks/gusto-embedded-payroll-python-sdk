# coding: utf-8

"""
    Gusto API

    Welcome to Gusto's Embedded Payroll API documentation!

    The version of the OpenAPI document: 2024-03-01
    Contact: developer@gusto.com
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from gusto_embedded_payroll_python_sdk import schemas  # noqa: F401


class HolidayPayPoliciesCreateCompanyPolicyRequestFederalHolidays(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)

    An object containing federal holiday objects, each containing a boolean selected property.
    """


    class MetaOapg:
        
        class properties:
        
            @staticmethod
            def new_years_day() -> typing.Type['HolidayPayPoliciesCreateCompanyPolicyRequestFederalHolidaysNewYearsDay']:
                return HolidayPayPoliciesCreateCompanyPolicyRequestFederalHolidaysNewYearsDay
        
            @staticmethod
            def mlk_day() -> typing.Type['HolidayPayPoliciesCreateCompanyPolicyRequestFederalHolidaysMlkDay']:
                return HolidayPayPoliciesCreateCompanyPolicyRequestFederalHolidaysMlkDay
        
            @staticmethod
            def presidents_day() -> typing.Type['HolidayPayPoliciesCreateCompanyPolicyRequestFederalHolidaysPresidentsDay']:
                return HolidayPayPoliciesCreateCompanyPolicyRequestFederalHolidaysPresidentsDay
        
            @staticmethod
            def memorial_day() -> typing.Type['HolidayPayPoliciesCreateCompanyPolicyRequestFederalHolidaysMemorialDay']:
                return HolidayPayPoliciesCreateCompanyPolicyRequestFederalHolidaysMemorialDay
        
            @staticmethod
            def juneteenth() -> typing.Type['HolidayPayPoliciesCreateCompanyPolicyRequestFederalHolidaysJuneteenth']:
                return HolidayPayPoliciesCreateCompanyPolicyRequestFederalHolidaysJuneteenth
        
            @staticmethod
            def independence_day() -> typing.Type['HolidayPayPoliciesCreateCompanyPolicyRequestFederalHolidaysIndependenceDay']:
                return HolidayPayPoliciesCreateCompanyPolicyRequestFederalHolidaysIndependenceDay
        
            @staticmethod
            def labor_day() -> typing.Type['HolidayPayPoliciesCreateCompanyPolicyRequestFederalHolidaysLaborDay']:
                return HolidayPayPoliciesCreateCompanyPolicyRequestFederalHolidaysLaborDay
        
            @staticmethod
            def columbus_day() -> typing.Type['HolidayPayPoliciesCreateCompanyPolicyRequestFederalHolidaysColumbusDay']:
                return HolidayPayPoliciesCreateCompanyPolicyRequestFederalHolidaysColumbusDay
        
            @staticmethod
            def veterans_day() -> typing.Type['HolidayPayPoliciesCreateCompanyPolicyRequestFederalHolidaysVeteransDay']:
                return HolidayPayPoliciesCreateCompanyPolicyRequestFederalHolidaysVeteransDay
        
            @staticmethod
            def thanksgiving() -> typing.Type['HolidayPayPoliciesCreateCompanyPolicyRequestFederalHolidaysThanksgiving']:
                return HolidayPayPoliciesCreateCompanyPolicyRequestFederalHolidaysThanksgiving
        
            @staticmethod
            def christmas_day() -> typing.Type['HolidayPayPoliciesCreateCompanyPolicyRequestFederalHolidaysChristmasDay']:
                return HolidayPayPoliciesCreateCompanyPolicyRequestFederalHolidaysChristmasDay
            __annotations__ = {
                "new_years_day": new_years_day,
                "mlk_day": mlk_day,
                "presidents_day": presidents_day,
                "memorial_day": memorial_day,
                "juneteenth": juneteenth,
                "independence_day": independence_day,
                "labor_day": labor_day,
                "columbus_day": columbus_day,
                "veterans_day": veterans_day,
                "thanksgiving": thanksgiving,
                "christmas_day": christmas_day,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["new_years_day"]) -> 'HolidayPayPoliciesCreateCompanyPolicyRequestFederalHolidaysNewYearsDay': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["mlk_day"]) -> 'HolidayPayPoliciesCreateCompanyPolicyRequestFederalHolidaysMlkDay': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["presidents_day"]) -> 'HolidayPayPoliciesCreateCompanyPolicyRequestFederalHolidaysPresidentsDay': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["memorial_day"]) -> 'HolidayPayPoliciesCreateCompanyPolicyRequestFederalHolidaysMemorialDay': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["juneteenth"]) -> 'HolidayPayPoliciesCreateCompanyPolicyRequestFederalHolidaysJuneteenth': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["independence_day"]) -> 'HolidayPayPoliciesCreateCompanyPolicyRequestFederalHolidaysIndependenceDay': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["labor_day"]) -> 'HolidayPayPoliciesCreateCompanyPolicyRequestFederalHolidaysLaborDay': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["columbus_day"]) -> 'HolidayPayPoliciesCreateCompanyPolicyRequestFederalHolidaysColumbusDay': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["veterans_day"]) -> 'HolidayPayPoliciesCreateCompanyPolicyRequestFederalHolidaysVeteransDay': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["thanksgiving"]) -> 'HolidayPayPoliciesCreateCompanyPolicyRequestFederalHolidaysThanksgiving': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["christmas_day"]) -> 'HolidayPayPoliciesCreateCompanyPolicyRequestFederalHolidaysChristmasDay': ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["new_years_day", "mlk_day", "presidents_day", "memorial_day", "juneteenth", "independence_day", "labor_day", "columbus_day", "veterans_day", "thanksgiving", "christmas_day", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["new_years_day"]) -> typing.Union['HolidayPayPoliciesCreateCompanyPolicyRequestFederalHolidaysNewYearsDay', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["mlk_day"]) -> typing.Union['HolidayPayPoliciesCreateCompanyPolicyRequestFederalHolidaysMlkDay', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["presidents_day"]) -> typing.Union['HolidayPayPoliciesCreateCompanyPolicyRequestFederalHolidaysPresidentsDay', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["memorial_day"]) -> typing.Union['HolidayPayPoliciesCreateCompanyPolicyRequestFederalHolidaysMemorialDay', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["juneteenth"]) -> typing.Union['HolidayPayPoliciesCreateCompanyPolicyRequestFederalHolidaysJuneteenth', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["independence_day"]) -> typing.Union['HolidayPayPoliciesCreateCompanyPolicyRequestFederalHolidaysIndependenceDay', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["labor_day"]) -> typing.Union['HolidayPayPoliciesCreateCompanyPolicyRequestFederalHolidaysLaborDay', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["columbus_day"]) -> typing.Union['HolidayPayPoliciesCreateCompanyPolicyRequestFederalHolidaysColumbusDay', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["veterans_day"]) -> typing.Union['HolidayPayPoliciesCreateCompanyPolicyRequestFederalHolidaysVeteransDay', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["thanksgiving"]) -> typing.Union['HolidayPayPoliciesCreateCompanyPolicyRequestFederalHolidaysThanksgiving', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["christmas_day"]) -> typing.Union['HolidayPayPoliciesCreateCompanyPolicyRequestFederalHolidaysChristmasDay', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["new_years_day", "mlk_day", "presidents_day", "memorial_day", "juneteenth", "independence_day", "labor_day", "columbus_day", "veterans_day", "thanksgiving", "christmas_day", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        new_years_day: typing.Union['HolidayPayPoliciesCreateCompanyPolicyRequestFederalHolidaysNewYearsDay', schemas.Unset] = schemas.unset,
        mlk_day: typing.Union['HolidayPayPoliciesCreateCompanyPolicyRequestFederalHolidaysMlkDay', schemas.Unset] = schemas.unset,
        presidents_day: typing.Union['HolidayPayPoliciesCreateCompanyPolicyRequestFederalHolidaysPresidentsDay', schemas.Unset] = schemas.unset,
        memorial_day: typing.Union['HolidayPayPoliciesCreateCompanyPolicyRequestFederalHolidaysMemorialDay', schemas.Unset] = schemas.unset,
        juneteenth: typing.Union['HolidayPayPoliciesCreateCompanyPolicyRequestFederalHolidaysJuneteenth', schemas.Unset] = schemas.unset,
        independence_day: typing.Union['HolidayPayPoliciesCreateCompanyPolicyRequestFederalHolidaysIndependenceDay', schemas.Unset] = schemas.unset,
        labor_day: typing.Union['HolidayPayPoliciesCreateCompanyPolicyRequestFederalHolidaysLaborDay', schemas.Unset] = schemas.unset,
        columbus_day: typing.Union['HolidayPayPoliciesCreateCompanyPolicyRequestFederalHolidaysColumbusDay', schemas.Unset] = schemas.unset,
        veterans_day: typing.Union['HolidayPayPoliciesCreateCompanyPolicyRequestFederalHolidaysVeteransDay', schemas.Unset] = schemas.unset,
        thanksgiving: typing.Union['HolidayPayPoliciesCreateCompanyPolicyRequestFederalHolidaysThanksgiving', schemas.Unset] = schemas.unset,
        christmas_day: typing.Union['HolidayPayPoliciesCreateCompanyPolicyRequestFederalHolidaysChristmasDay', schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'HolidayPayPoliciesCreateCompanyPolicyRequestFederalHolidays':
        return super().__new__(
            cls,
            *args,
            new_years_day=new_years_day,
            mlk_day=mlk_day,
            presidents_day=presidents_day,
            memorial_day=memorial_day,
            juneteenth=juneteenth,
            independence_day=independence_day,
            labor_day=labor_day,
            columbus_day=columbus_day,
            veterans_day=veterans_day,
            thanksgiving=thanksgiving,
            christmas_day=christmas_day,
            _configuration=_configuration,
            **kwargs,
        )

from gusto_embedded_payroll_python_sdk.model.holiday_pay_policies_create_company_policy_request_federal_holidays_christmas_day import HolidayPayPoliciesCreateCompanyPolicyRequestFederalHolidaysChristmasDay
from gusto_embedded_payroll_python_sdk.model.holiday_pay_policies_create_company_policy_request_federal_holidays_columbus_day import HolidayPayPoliciesCreateCompanyPolicyRequestFederalHolidaysColumbusDay
from gusto_embedded_payroll_python_sdk.model.holiday_pay_policies_create_company_policy_request_federal_holidays_independence_day import HolidayPayPoliciesCreateCompanyPolicyRequestFederalHolidaysIndependenceDay
from gusto_embedded_payroll_python_sdk.model.holiday_pay_policies_create_company_policy_request_federal_holidays_juneteenth import HolidayPayPoliciesCreateCompanyPolicyRequestFederalHolidaysJuneteenth
from gusto_embedded_payroll_python_sdk.model.holiday_pay_policies_create_company_policy_request_federal_holidays_labor_day import HolidayPayPoliciesCreateCompanyPolicyRequestFederalHolidaysLaborDay
from gusto_embedded_payroll_python_sdk.model.holiday_pay_policies_create_company_policy_request_federal_holidays_memorial_day import HolidayPayPoliciesCreateCompanyPolicyRequestFederalHolidaysMemorialDay
from gusto_embedded_payroll_python_sdk.model.holiday_pay_policies_create_company_policy_request_federal_holidays_mlk_day import HolidayPayPoliciesCreateCompanyPolicyRequestFederalHolidaysMlkDay
from gusto_embedded_payroll_python_sdk.model.holiday_pay_policies_create_company_policy_request_federal_holidays_new_years_day import HolidayPayPoliciesCreateCompanyPolicyRequestFederalHolidaysNewYearsDay
from gusto_embedded_payroll_python_sdk.model.holiday_pay_policies_create_company_policy_request_federal_holidays_presidents_day import HolidayPayPoliciesCreateCompanyPolicyRequestFederalHolidaysPresidentsDay
from gusto_embedded_payroll_python_sdk.model.holiday_pay_policies_create_company_policy_request_federal_holidays_thanksgiving import HolidayPayPoliciesCreateCompanyPolicyRequestFederalHolidaysThanksgiving
from gusto_embedded_payroll_python_sdk.model.holiday_pay_policies_create_company_policy_request_federal_holidays_veterans_day import HolidayPayPoliciesCreateCompanyPolicyRequestFederalHolidaysVeteransDay
