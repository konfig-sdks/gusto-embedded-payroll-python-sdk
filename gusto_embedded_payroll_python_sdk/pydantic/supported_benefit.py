# coding: utf-8

"""
    Gusto API

    Welcome to Gusto's Embedded Payroll API documentation!

    The version of the OpenAPI document: 2024-03-01
    Contact: developer@gusto.com
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict


class SupportedBenefit(BaseModel):
    # The description of the benefit.
    description: typing.Optional[str] = Field(None, alias='description')

    # The benefit type in Gusto.
    benefit_type: typing.Optional[typing.Union[int, float]] = Field(None, alias='benefit_type')

    # The name of the benefit.
    name: typing.Optional[str] = Field(None, alias='name')

    # Whether the benefit is deducted before tax calculations, thus reducing oneâ€™s taxable income
    pretax: typing.Optional[bool] = Field(None, alias='pretax')

    # Whether the benefit is deducted after tax calculations.
    posttax: typing.Optional[bool] = Field(None, alias='posttax')

    # Whether the benefit is considered imputed income.
    imputed: typing.Optional[bool] = Field(None, alias='imputed')

    # Whether the benefit is healthcare related.
    healthcare: typing.Optional[bool] = Field(None, alias='healthcare')

    # Whether the benefit is associated with retirement planning.
    retirement: typing.Optional[bool] = Field(None, alias='retirement')

    # Whether the benefit has a government mandated yearly limit.
    yearly_limit: typing.Optional[bool] = Field(None, alias='yearly_limit')

    # Category where the benefit belongs to.
    category: typing.Optional[str] = Field(None, alias='category')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
