# coding: utf-8

"""
    Gusto API

    Welcome to Gusto's Embedded Payroll API documentation!

    The version of the OpenAPI document: 2024-03-01
    Contact: developer@gusto.com
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict


class Event(BaseModel):
    # Unique identifier for the event.
    uuid: typing.Optional[str] = Field(None, alias='uuid')

    # Description of the event (e.g., payroll.submitted, or company.form.signed).
    event_type: typing.Optional[str] = Field(None, alias='event_type')

    # Name of the parent resource of the described entity.
    resource_type: typing.Optional[Literal["Company"]] = Field(None, alias='resource_type')

    # Unique identifier for the parent resource.
    resource_uuid: typing.Optional[str] = Field(None, alias='resource_uuid')

    # Name of the entity that the event corresponds to.
    entity_type: typing.Optional[str] = Field(None, alias='entity_type')

    # Unique identifier for the entity.
    entity_uuid: typing.Optional[str] = Field(None, alias='entity_uuid')

    # Time at which this event was created. Measured in seconds since the Unix epoch.
    timestamp: typing.Optional[int] = Field(None, alias='timestamp')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
