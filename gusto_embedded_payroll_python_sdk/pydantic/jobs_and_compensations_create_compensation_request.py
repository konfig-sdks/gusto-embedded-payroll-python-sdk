# coding: utf-8

"""
    Gusto API

    Welcome to Gusto's Embedded Payroll API documentation!

    The version of the OpenAPI document: 2024-03-01
    Contact: developer@gusto.com
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from gusto_embedded_payroll_python_sdk.pydantic.flsa_status_type import FlsaStatusType
from gusto_embedded_payroll_python_sdk.pydantic.jobs_and_compensations_create_compensation_request_minimum_wages import JobsAndCompensationsCreateCompensationRequestMinimumWages

class JobsAndCompensationsCreateCompensationRequest(BaseModel):
    # The unit accompanying the compensation rate. If the employee is an owner, rate should be 'Paycheck'.
    payment_unit: Literal["Hour", "Week", "Month", "Year", "Paycheck"] = Field(alias='payment_unit')

    flsa_status: FlsaStatusType = Field(alias='flsa_status')

    # The dollar amount paid per payment unit.
    rate: typing.Optional[str] = Field(None, alias='rate')

    # The date when the compensation takes effect.
    effective_date: typing.Optional[str] = Field(None, alias='effective_date')

    # Determines whether the compensation should be adjusted for minimum wage. Only applies to Nonexempt employees.
    adjust_for_minimum_wage: typing.Optional[bool] = Field(None, alias='adjust_for_minimum_wage')

    minimum_wages: typing.Optional[JobsAndCompensationsCreateCompensationRequestMinimumWages] = Field(None, alias='minimum_wages')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
