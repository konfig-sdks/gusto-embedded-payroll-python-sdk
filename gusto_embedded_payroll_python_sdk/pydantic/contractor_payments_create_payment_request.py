# coding: utf-8

"""
    Gusto API

    Welcome to Gusto's Embedded Payroll API documentation!

    The version of the OpenAPI document: 2024-03-01
    Contact: developer@gusto.com
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict


class ContractorPaymentsCreatePaymentRequest(BaseModel):
    # The contractor receiving the payment
    contractor_uuid: str = Field(alias='contractor_uuid')

    # The contractor receiving the payment
    date: date = Field(alias='date')

    payment_method: typing.Optional[Literal["Direct Deposit", "Check", "Historical Payment"]] = Field(None, alias='payment_method')

    # If the contractor is on a fixed wage, this is the fixed wage payment for the contractor, regardless of hours worked
    wage: typing.Optional[typing.Union[int, float]] = Field(None, alias='wage')

    # If the contractor is on an hourly wage, this is the number of hours that the contractor worked for the payment
    hours: typing.Optional[typing.Union[int, float]] = Field(None, alias='hours')

    # If the contractor is on an hourly wage, this is the bonus the contractor earned
    bonus: typing.Optional[typing.Union[int, float]] = Field(None, alias='bonus')

    # Reimbursed wages for the contractor
    reimbursement: typing.Optional[typing.Union[int, float]] = Field(None, alias='reimbursement')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
