# coding: utf-8

"""
    Gusto API

    Welcome to Gusto's Embedded Payroll API documentation!

    The version of the OpenAPI document: 2024-03-01
    Contact: developer@gusto.com
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict


class Authentication(BaseModel):
    # A new access token that can be used for subsequent authenticated requests
    access_token: typing.Optional[str] = Field(None, alias='access_token')

    # The literal string 'bearer'
    token_type: typing.Optional[str] = Field(None, alias='token_type')

    # The TTL of this token. After this amount of time, you must hit the refresh token endpoint to continue making authenticated requests.
    expires_in: typing.Optional[typing.Union[int, float]] = Field(None, alias='expires_in')

    # A token that must be passed to the refresh token endpoint to get a new authenticated token.
    refresh_token: typing.Optional[str] = Field(None, alias='refresh_token')

    # Datetime for when the new access token is created.
    created_at: typing.Optional[str] = Field(None, alias='created_at')

    # All of the scopes for which the access token provides access.
    scope: typing.Optional[str] = Field(None, alias='scope')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
