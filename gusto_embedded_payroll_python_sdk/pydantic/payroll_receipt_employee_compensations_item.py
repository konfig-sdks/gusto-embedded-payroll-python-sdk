# coding: utf-8

"""
    Gusto API

    Welcome to Gusto's Embedded Payroll API documentation!

    The version of the OpenAPI document: 2024-03-01
    Contact: developer@gusto.com
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict


class PayrollReceiptEmployeeCompensationsItem(BaseModel):
    # The UUID of the employee.
    employee_uuid: typing.Optional[str] = Field(None, alias='employee_uuid')

    # The first name of the employee.
    employee_first_name: typing.Optional[str] = Field(None, alias='employee_first_name')

    # The last name of the employee.
    employee_last_name: typing.Optional[str] = Field(None, alias='employee_last_name')

    # The employee's compensation payment method.\\n\\n`Check` `Direct Deposit`
    payment_method: typing.Optional[str] = Field(None, alias='payment_method')

    # The employee's net pay. Net pay paid by check is available for reference but is not included in the `[\"totals\"][\"net_pay_debit\"]` amount.
    net_pay: typing.Optional[str] = Field(None, alias='net_pay')

    # The total of employer and employee taxes for the pay period.
    total_tax: typing.Optional[str] = Field(None, alias='total_tax')

    # The total garnishments for the pay period.
    total_garnishments: typing.Optional[str] = Field(None, alias='total_garnishments')

    # The total child support garnishment for the pay period.
    child_support_garnishment: typing.Optional[str] = Field(None, alias='child_support_garnishment')

    # The total reimbursement for the pay period.
    total_reimbursement: typing.Optional[str] = Field(None, alias='total_reimbursement')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
