# coding: utf-8

"""
    Gusto API

    Welcome to Gusto's Embedded Payroll API documentation!

    The version of the OpenAPI document: 2024-03-01
    Contact: developer@gusto.com
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict


class AchTransaction(BaseModel):
    # The description of the ACH transaction. Can be used to identify the ACH transaction on the recipient's bank statement.
    description: typing.Optional[str] = Field(None, alias='description')

    # Unique identifier of an ACH transaction
    uuid: typing.Optional[str] = Field(None, alias='uuid')

    # Unique identifier of the company to which the ACH transaction belongs
    company_uuid: typing.Optional[str] = Field(None, alias='company_uuid')

    # The type of payment event associated with the ACH transaction
    payment_event_type: typing.Optional[Literal["Payroll", "ContractorPayment"]] = Field(None, alias='payment_event_type')

    # Unique identifier for the payment event associated with the ACH transaction
    payment_event_uuid: typing.Optional[str] = Field(None, alias='payment_event_uuid')

    # The type of recipient associated with the ACH transaction
    recipient_type: typing.Optional[Literal["Employee", "Contractor"]] = Field(None, alias='recipient_type')

    # Unique identifier for the recipient associated with the ACH transaction
    recipient_uuid: typing.Optional[str] = Field(None, alias='recipient_uuid')

    # The error code associated with the ACH transaction, if any. If there is no error on the ACH transaction, this field will be nil. See [this article](https://engineering.gusto.com/how-ach-works-a-developer-perspective-part-2/) for a complete list of ACH return codes.
    error_code: typing.Optional[str] = Field(None, alias='error_code')

    # The type of transaction associated with the ACH transaction
    transaction_type: typing.Optional[str] = Field(None, alias='transaction_type')

    # The status of the ACH transaction
    payment_status: typing.Optional[Literal["unsubmitted", "submitted", "successful", "failed"]] = Field(None, alias='payment_status')

    # The direction of the payment
    payment_direction: typing.Optional[Literal["credit", "debit"]] = Field(None, alias='payment_direction')

    # The date of the payment event check associated with the ACH transaction
    payment_event_check_date: typing.Optional[str] = Field(None, alias='payment_event_check_date')

    # The date of the payment associated with the ACH transaction
    payment_date: typing.Optional[str] = Field(None, alias='payment_date')

    # The amount of money moved by the ACH transaction. This amount is always non-negative.
    amount: typing.Optional[str] = Field(None, alias='amount')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
