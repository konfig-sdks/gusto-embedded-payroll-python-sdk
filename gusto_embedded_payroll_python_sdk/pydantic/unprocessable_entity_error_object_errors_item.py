# coding: utf-8

"""
    Gusto API

    Welcome to Gusto's Embedded Payroll API documentation!

    The version of the OpenAPI document: 2024-03-01
    Contact: developer@gusto.com
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict


class UnprocessableEntityErrorObjectErrorsItem(BaseModel):
    # Specifies where the error occurs. Typically this key identifies the attribute/parameter related to the error.
    error_key: typing.Optional[str] = Field(None, alias='error_key')

    # Specifies the type of error. The category provides error groupings and can be used to build custom error handling in your integration.
    category: typing.Optional[str] = Field(None, alias='category')

    # Provides details about the error - generally this message can be surfaced to an end user.
    message: typing.Optional[str] = Field(None, alias='message')

    # Contains relevant data to identify the resource in question when applicable. For example, to identify an entity `entity_type` and `entity_uuid` will be provided.
    metadata: typing.Optional[typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]]] = Field(None, alias='metadata')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
