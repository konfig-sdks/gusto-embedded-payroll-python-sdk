# coding: utf-8

"""
    Gusto API

    Welcome to Gusto's Embedded Payroll API documentation!

    The version of the OpenAPI document: 2024-03-01
    Contact: developer@gusto.com
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from gusto_embedded_payroll_python_sdk.pydantic.contractor_payment_receipt_contractor_payments import ContractorPaymentReceiptContractorPayments
from gusto_embedded_payroll_python_sdk.pydantic.contractor_payment_receipt_licensee import ContractorPaymentReceiptLicensee
from gusto_embedded_payroll_python_sdk.pydantic.contractor_payment_receipt_totals import ContractorPaymentReceiptTotals

class ContractorPaymentReceipt(BaseModel):
    # A unique identifier of the contractor payment receipt.
    contractor_payment_uuid: typing.Optional[str] = Field(None, alias='contractor_payment_uuid')

    # A unique identifier of the company making the contractor payment.
    company_uuid: typing.Optional[str] = Field(None, alias='company_uuid')

    # The name of the company making the contractor payment.
    name_of_sender: typing.Optional[str] = Field(None, alias='name_of_sender')

    # The individual or company name of the contractor receiving payment.
    name_of_recipient: typing.Optional[str] = Field(None, alias='name_of_recipient')

    # The debit date for the contractor payment.
    debit_date: typing.Optional[date] = Field(None, alias='debit_date')

    # Always the fixed string \"ZenPayroll, Inc., dba Gusto is a licensed money transmitter. For more about Gustoâ€™s licenses and your state-specific rights to request information, submit complaints, dispute errors, or cancel transactions, visit our license page.\"
    license: typing.Optional[str] = Field(None, alias='license')

    # URL for the license information for the licensed payroll processor. Always the fixed string \"https://gusto.com/about/licenses\"
    license_uri: typing.Optional[str] = Field(None, alias='license_uri')

    # URL for information related to right to refund. Always the fixed string \"https://gusto.com/about/licenses\"
    right_to_refund: typing.Optional[str] = Field(None, alias='right_to_refund')

    # URL for information related to right to liability of licensee. Always the fixed string \"https://gusto.com/about/licenses\"
    liability_of_licensee: typing.Optional[str] = Field(None, alias='liability_of_licensee')

    totals: typing.Optional[ContractorPaymentReceiptTotals] = Field(None, alias='totals')

    contractor_payments: typing.Optional[ContractorPaymentReceiptContractorPayments] = Field(None, alias='contractor_payments')

    licensee: typing.Optional[ContractorPaymentReceiptLicensee] = Field(None, alias='licensee')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
