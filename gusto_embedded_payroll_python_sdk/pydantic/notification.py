# coding: utf-8

"""
    Gusto API

    Welcome to Gusto's Embedded Payroll API documentation!

    The version of the OpenAPI document: 2024-03-01
    Contact: developer@gusto.com
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from gusto_embedded_payroll_python_sdk.pydantic.notification_resources import NotificationResources

class Notification(BaseModel):
    # The title of the notification. This highlights the actionable component of the notification.
    title: typing.Optional[str] = Field(None, alias='title')

    # Unique identifier of a notification.
    uuid: typing.Optional[str] = Field(None, alias='uuid')

    # Unique identifier of the company to which the notification belongs.
    company_uuid: typing.Optional[str] = Field(None, alias='company_uuid')

    # The message of the notification. This provides additional context for the user and recommends a specific action to resolve the notification.
    message: typing.Optional[str] = Field(None, alias='message')

    # The notification's category.
    category: typing.Optional[str] = Field(None, alias='category')

    # Indicates whether a notification requires action or not. If false, the notification provides critical information only.
    actionable: typing.Optional[bool] = Field(None, alias='actionable')

    # Timestamp of when the notification was published.
    published_at: typing.Optional[str] = Field(None, alias='published_at')

    # Timestamp of when the notification is due. If the notification has no due date, this field will be null.
    due_at: typing.Optional[str] = Field(None, alias='due_at')

    resources: typing.Optional[NotificationResources] = Field(None, alias='resources')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
