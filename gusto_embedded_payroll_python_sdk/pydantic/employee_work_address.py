# coding: utf-8

"""
    Gusto API

    Welcome to Gusto's Embedded Payroll API documentation!

    The version of the OpenAPI document: 2024-03-01
    Contact: developer@gusto.com
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict


class EmployeeWorkAddress(BaseModel):
    # The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/idempotency) for information on how to use this field.
    version: typing.Optional[str] = Field(None, alias='version')

    # The unique identifier of this work address.
    uuid: typing.Optional[str] = Field(None, alias='uuid')

    # The date the employee began working at this location.
    effective_date: typing.Optional[str] = Field(None, alias='effective_date')

    # Signifies if this address is the active work address for the current date
    active: typing.Optional[bool] = Field(None, alias='active')

    # UUID reference to the company location for this work address.
    location_uuid: typing.Optional[str] = Field(None, alias='location_uuid')

    # UUID reference to the employee for this work address.
    employee_uuid: typing.Optional[str] = Field(None, alias='employee_uuid')

    street_1: typing.Optional[str] = Field(None, alias='street_1')

    street_2: typing.Optional[typing.Optional[str]] = Field(None, alias='street_2')

    city: typing.Optional[str] = Field(None, alias='city')

    state: typing.Optional[str] = Field(None, alias='state')

    zip: typing.Optional[str] = Field(None, alias='zip')

    country: typing.Optional[str] = Field(None, alias='country')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
